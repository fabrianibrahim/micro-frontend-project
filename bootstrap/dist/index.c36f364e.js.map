{"mappings":"AAAA,MAAM,oBAAoB,UAAY;IACpC,QAAQ,GAAG,CAAC;IACZ,uDAAuD;IACvD,MAAM,WAAW,OAAO,QAAQ,CAAC,QAAQ;IACzC,IAAI,gBAAgB;IAEpB,OAAQ;QACN,KAAK;YACH,gBAAgB;YAChB,KAAM;QACR,KAAK;YACH,gBAAgB;YAChB,KAAM;QACR;YACE,MAAM,IAAI,MAAM,4BAA4B;IAChD;IAEA,wEAAwE;IACxE,MAAM,WAAW,MAAM,MAAM,CAAC,KAAK,EAAE,cAAc,WAAW,CAAC;IAC/D,MAAM,OAAO,MAAM,SAAS,IAAI;IAEhC,sDAAsD;IACtD,MAAM,SAAS,IAAI;IACnB,MAAM,MAAM,OAAO,eAAe,CAAC,MAAM;IAEzC,gGAAgG;IAChG,MAAM,YAAY,IAAI,oBAAoB,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU;IAChE,MAAM,YAAY,IAAI,oBAAoB,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU;IAEhE,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IACpC,SAAS,IAAI,CAAC,WAAW,CAAC,SAAS,UAAU,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI;IAGlE,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IAAK;QACzC,MAAM,OAAO,SAAS,UAAU,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI;QAEnD,IAAI,KAAK,QAAQ,KAAK,UAAU;YAC9B,kFAAkF;YAClF,MAAM,gBAAgB,SAAS,aAAa,CAAC;YAC7C,cAAc,SAAS,GAAG,KAAK,SAAS;YACxC,KAAK,UAAU,CAAC,YAAY,CAAC,eAAe;QAC9C,OAAO,IAAI,KAAK,QAAQ,KAAK,UAAU,KAAK,GAAG,KAAK,cAAc;YAChE,+DAA+D;YAC/D,MAAM,cAAc,SAAS,aAAa,CAAC;YAC3C,YAAY,YAAY,CAAC,OAAO;YAChC,YAAY,YAAY,CAAC,QAAQ,KAAK,YAAY,CAAC;YACnD,KAAK,UAAU,CAAC,YAAY,CAAC,aAAa;QAC5C,OAAO,IAAI,KAAK,QAAQ,KAAK,OAAO;YAClC,6DAA6D;YAC7D,MAAM,aAAa,SAAS,aAAa,CAAC;YAC1C,WAAW,YAAY,CAAC,OAAO,KAAK,YAAY,CAAC;YACjD,KAAK,UAAU,CAAC,YAAY,CAAC,YAAY;QAC3C,CAAC;QAED,SAAS,IAAI,CAAC,WAAW,CAAC;IAC5B;IAEA,6DAA6D;IAC7D,WAAW;AACb;AAEA,SAAS,WAAW,iBAAiB,EAAE;IACrC,MAAM,cAAc,SAAS,aAAa,CAAC;IAC3C,YAAY,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC;IAC7D,SAAS,IAAI,CAAC,WAAW,CAAC;AAC5B;AAEA","sources":["index.js"],"sourcesContent":["const loadMicroFrontend = async () => {\n  console.log('Loading micro-frontend');\n  // Decide which micro frontend to load based on the URL\n  const pathname = window.location.pathname;\n  let microFrontend = '';\n\n  switch (pathname) {\n    case '/hello':\n      microFrontend = 'welcome';\n      break;\n    case '/play':\n      microFrontend = 'music';\n      break;\n    default:\n      throw new Error('Micro frontend not found');\n  }\n\n  // Download the selected micro frontend using the index.html entry point\n  const response = await fetch(`/mfe/${microFrontend}/index.html`);\n  const html = await response.text();\n\n  // Parse the content of index.html using the DOMParser\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  // Transfer all the nodes in <head> and <body> from the downloaded document to the page Document\n  const headNodes = doc.getElementsByTagName('head')[0].childNodes;\n  const bodyNodes = doc.getElementsByTagName('body')[0].childNodes;\n\n  for (let i = 0; i < headNodes.length; i++) {\n    document.head.appendChild(document.importNode(headNodes[i], true));\n  }\n\n  for (let i = 0; i < bodyNodes.length; i++) {\n    const node = document.importNode(bodyNodes[i], true);\n\n    if (node.nodeName === 'SCRIPT') {\n      // Fix script nodes by copying the content of the script into a new script element\n      const newScriptNode = document.createElement('script');\n      newScriptNode.innerHTML = node.innerHTML;\n      node.parentNode.replaceChild(newScriptNode, node);\n    } else if (node.nodeName === 'LINK' && node.rel === 'stylesheet') {\n      // Fix link nodes by copying the href attribute to the new node\n      const newLinkNode = document.createElement('link');\n      newLinkNode.setAttribute('rel', 'stylesheet');\n      newLinkNode.setAttribute('href', node.getAttribute('href'));\n      node.parentNode.replaceChild(newLinkNode, node);\n    } else if (node.nodeName === 'IMG') {\n      // Fix img nodes by copying the src attribute to the new node\n      const newImgNode = document.createElement('img');\n      newImgNode.setAttribute('src', node.getAttribute('src'));\n      node.parentNode.replaceChild(newImgNode, node);\n    }\n\n    document.body.appendChild(node);\n  }\n\n  // Add base tag to fix relative URLs in micro frontend assets\n  addBaseTag(microFrontend);\n};\n\nfunction addBaseTag(microFrontendName) {\n  const baseElement = document.createElement('base');\n  baseElement.setAttribute('href', `/mfe/${microFrontendName}/`);\n  document.head.appendChild(baseElement);\n}\n\nloadMicroFrontend();\n"],"names":[],"version":3,"file":"index.c36f364e.js.map","sourceRoot":"../"}